/* Modal Component Styles */

.modalOverlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-lg);
  background: transparent;
}

/* Fluid canvas layers (behind modal content) */
.fluidContainer {
  position: absolute;
  inset: 0;
  z-index: 0;
  background: var(--color-background);
  overflow: hidden;
  pointer-events: none;
}

.fluidCanvas {
  position: absolute;
  inset: -3rem; /* overscan to avoid edge clipping */
  width: calc(100% + 6rem);
  height: calc(100% + 6rem);
  filter: blur(14px);
  opacity: 0.6; /* ensure paint reads clearly over base */
}

.grainOverlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 1;
  background-image: url(var(--base-url)images/temp/grain.webp);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  mix-blend-mode: overlay;
  opacity: 0.4;
}

.fluidNoise {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 2;
  opacity: 0.18;
  mix-blend-mode: color-burn;
  background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 600 600'>\
<filter id='a'><feTurbulence type='fractalNoise' baseFrequency='.99' numOctaves='20' stitchTiles='stitch'/></filter>\
<rect width='100%' height='100%' filter='url(#a)'/>\
</svg>");
  background-size: 200px 200px;
}

.modalContainer {
  position: relative;
  z-index: 3;
  background: rgba(16, 16, 33, 0.95);
  backdrop-filter: blur(16px) saturate(180%);
  -webkit-backdrop-filter: blur(16px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 24px 0 24px 0;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  max-width: 90vw;
  max-height: 90vh;
  width: 100%;
  min-width: 320px;
  max-width: 600px;
  overflow: hidden;
  transform-style: preserve-3d;
}

.modalClose {
  position: absolute;
  top: clamp(1.5rem, 3vw, 2.5rem);
  right: clamp(1.5rem, 3vw, 2.5rem);
  background: transparent;
  border: 2px solid var(--color-text-primary);
  border-radius: 50%;
  width: clamp(3rem, 5vw, 4rem);
  height: clamp(3rem, 5vw, 4rem);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: clamp(1.5rem, 3vw, 2rem);
  color: var(--color-text-primary);
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
  will-change: transform, opacity;
  padding: 0;
  line-height: 1;
  font-family: Arial, sans-serif;
}

.modalClose:hover {
  background: var(--color-red-electrica);
  border-color: var(--color-red-electrica);
  color: var(--color-white);
  transform: rotate(90deg);
}

.modalClose:active {
  transform: scale(0.95);
}

.modalContent {
  padding: clamp(2rem, 4vw, 3rem);
  padding-top: clamp(3rem, 5vw, 4rem);
  max-height: 90vh;
  overflow-y: auto;
  color: var(--color-text-primary);
}

.modalHeader {
  margin-bottom: var(--space-lg);
  text-align: left;
}

.modalTitle {
  font-size: clamp(2rem, 4vw, 3rem);
  font-weight: 500;
  line-height: 1.1;
  color: var(--color-text-primary);
  margin: 0;
  font-family: var(--font-primary);
  text-align: left;
  letter-spacing: -0.01em;
}

.modalBody {
  font-size: clamp(0.95rem, 1.2vw, 1.1rem);
  line-height: 1.6;
  color: var(--color-text-secondary);
  font-family: var(--font-primary);
  font-weight: var(--font-weight-light);
}

/* Custom scrollbar for modal content */
.modalContent::-webkit-scrollbar {
  width: 6px;
}

.modalContent::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
}

.modalContent::-webkit-scrollbar-thumb {
  background: var(--color-billete-nuevot);
  border-radius: 3px;
}

.modalContent::-webkit-scrollbar-thumb:hover {
  background: var(--color-red-electrica);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .modalOverlay {
    padding: var(--space-md);
  }
  
  .modalContainer {
    max-width: 95vw;
    max-height: 95vh;
  }
  
  .modalContent {
    padding: var(--space-lg);
    padding-top: var(--space-xl);
  }
}

/* Animation states for reduced motion */
@media (prefers-reduced-motion: reduce) {
  .modalContainer {
    transition: none !important;
  }
  
  .modalClose {
    transition: none !important;
  }
}
